{"version":3,"sources":["components/user/reducer/action.tsx","components/core/table/table.tsx","components/user/useUser.tsx","components/home/home.tsx","App.tsx","reportWebVitals.tsx","components/user/reducer/reducer.tsx","config/axios.tsx","store/store.tsx","components/user/reducer/epics.tsx","index.tsx"],"names":["GET_USERS","Table","props","information","className","headers","map","header","index","content","id","name","username","email","address","street","suite","city","zipcode","phone","website","company","catchPhrase","bs","useUser","users","useSelector","state","list","useState","tableContent","setTableContent","dispatch","useDispatch","useEffect","length","type","Object","keys","home","App","path","component","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","userReducer","action","status","payload","api","axios","create","baseURL","persistConfig","key","storage","whitelist","rootEpic","combineEpics","actions$","pipe","ofType","switchMap","concat","of","from","get","response","data","epicMiddleware","createEpicMiddleware","rootReducer","combineReducers","usersReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedReducer","persistReducer","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b86a19d.chunk.js","sourcesContent":["import { IUserList } from \"../../../interfaces/IUserList\";\n\nexport const SET_STATUS = \"SET_STATUS\";\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\n\n\nexport function setStatus(status: string) {\n    return {\n        type: SET_STATUS,\n        payload: status\n    }\n}\n\nexport function getUsers() {\n    return {\n        type: GET_USERS\n    }\n}\n\nexport function getUsersSuccess(items: IUserList) {\n    return {\n        type: GET_USERS_SUCCESS,\n        payload: items\n    }\n}","import { ITable } from \"../../../interfaces\";\nimport './table.css'\n\nconst Table = (props: { information: ITable | undefined; }) => {\n\n    const { information } = props;\n\n    return (\n        <>\n            <table className=\"table\" >\n                <thead>\n                    <tr>\n\n                        {\n                            information &&\n                            information.headers.map((header: any, index: any) => {\n                                return <th key={index}>{header}</th>\n                            })\n                        }\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        information &&\n                        information.content.map((content: any, index: any) => {\n                            return <>\n                                <tr><td key={index}>{content.id}</td>\n                                    <td key={index}>{content.name}</td>\n                                    <td key={index}>{content.username}</td>\n                                    <td key={index}>{content.email}</td>\n                                    <td key={index}>{content.address.street}  {content.address.suite} {content.address.city} {content.address.zipcode}</td>\n                                    <td key={index}>{content.phone}</td>\n                                    <td key={index}>{content.website} </td>\n                                    <td key={index}>{content.company.name}  {content.company.catchPhrase} {content.company.bs}</td>\n                                </tr>\n                            </>\n                        })\n                    }\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Table","import { useEffect, useState } from 'react'\nimport { getUsers } from './reducer/action'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IUserList, ITable } from '../../interfaces/index';\nimport { Table } from '../core'\n\nexport default function useUser() {\n    const users = useSelector((state: IUserList) => state.users.list);\n    const [tableContent, setTableContent] = useState<ITable>()\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (users.length === 0) {\n            dispatch(getUsers());\n        }\n    })\n\n    useEffect(() => {\n        if (users.length > 0) {\n            setTableContent({\n                headers: Object.keys(users[0]),\n                content: users\n            })\n        }\n    }, [users])\n\n    return (\n        <div>\n            <Table information={tableContent}></Table>\n        </div>\n    )\n}\n","import Users from '../user/useUser'\n\nexport default function home(): JSX.Element {\n    return (\n        <div>\n            <Users></Users>\n        </div>\n    )\n}\n","import Home from './components/home/home';\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App(): JSX.Element {\n  return <Switch>\n    <Route path=\"/\" component={Home} />\n    {/* <Route path=\"/singUp\" component={UseSingUp} />\n  <Route path=\"/dashboard/:page\" component={UseDashboard} /> */}\n  </Switch>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry: ReportHandler | undefined) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IAction } from \"../../../interfaces/index\";\n\nconst initialState = {\n    list: []\n}\n\nconst userReducer = (state = initialState, action: IAction) => {\n    switch (action.type) {\n        case \"SET_STATUS\": {\n            return {\n                ...state,\n                status: action.payload\n            };\n        }\n        case \"GET_USERS_SUCCESS\":\n            return {\n                ...state,\n                list: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import axios from 'axios';\n\nexport const api = axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com/users'\n});","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\";\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport usersReducer from \"../components/user/reducer/reducer\";\nimport controlDataUsersEpic from '../components/user/reducer/epics'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['users']\n}\n\nconst rootEpic = combineEpics(controlDataUsersEpic);\nconst epicMiddleware = createEpicMiddleware();\nconst rootReducer = combineReducers({\n    users: usersReducer\n});\n\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(epicMiddleware)));\nepicMiddleware.run(rootEpic as any);\n\nexport default store;","import { getUsersSuccess, setStatus, GET_USERS } from './action';\nimport { switchMap, map } from \"rxjs/operators\";\nimport { ActionsObservable, ofType } from \"redux-observable\";\nimport { concat, of, from } from \"rxjs\";\nimport { api } from '../../../config/axios'\n\nexport default function controlDataUsersEpic(actions$: ActionsObservable<any>) {\n    return actions$.pipe(\n        ofType(\n            GET_USERS\n        ),\n        switchMap((action): any => {\n            if (action.type === GET_USERS) {\n                return concat(\n                    of(setStatus(\"pending\")),\n                    from(api.get(\"\")).pipe(\n                        map((response: any) => {\n                            return getUsersSuccess(response.data);\n                        })\n                    )\n                )\n            }\n        })\n    )\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store'\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(function () { });\n"],"sourceRoot":""}